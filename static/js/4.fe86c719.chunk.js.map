{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","cn","user","to","activeClassName","active","name","MessageItem","dialog","message","AddMessageForm","required","value","undefined","onSubmit","addDialogMessage","messageText","render","handleSubmit","submitting","validate","input","meta","type","placeholder","error","touched","disabled","Dialogs","userNameList","dialogsPage","dialogsData","map","messageList","messageData","text","pageDialogs","users","dialogs","compose","connect","state","dispatch","addDialogMessageActionCreator","withAuthRedirect"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,YAAc,6BAA6B,MAAQ,uBAAuB,KAAO,sBAAsB,OAAS,wBAAwB,QAAU,yBAAyB,OAAS,0B,8HCItM,SAASC,EAAWC,GAClB,IAAMC,EAAO,YAAcD,EAAME,GACjC,OACE,qBAAKC,UAAWC,IAAGC,KAAnB,SACE,cAAC,IAAD,CAASC,GAAIL,EAAMM,gBAAiBH,IAAGI,OAAvC,SACGR,EAAMS,SAMf,SAASC,EAAYV,GACnB,OAAO,qBAAKG,UAAWC,IAAGO,OAAnB,SAA4BX,EAAMY,UA2B3C,IAAMC,EAAiB,SAACb,GACtB,IAKMc,EAAW,SAACC,GAAD,OAAYA,OAAQC,EAAY,YAEjD,OACE,cAAC,IAAD,CACEC,SATwB,SAACF,GAC3Bf,EAAMkB,iBAAiBH,EAAMI,aAC7BJ,EAAMI,YAAc,IAQlBC,OAAQ,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,WAAjB,OACN,uBAAML,SAAUI,EAAhB,UACE,cAAC,IAAD,CAAOZ,KAAK,cAAcc,SAAUT,EAApC,SACG,gBAAGU,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACC,gCACE,oDACMD,GADN,IAEEE,KAAK,WACLC,YAAY,mBAEbF,EAAKG,OAASH,EAAKI,SAAW,+BAAOJ,EAAKG,cAIjD,qBAAKzB,UAAU,UAAf,SACE,wBAAQuB,KAAK,SAASI,SAAUR,EAAhC,2BAUGS,EA5Df,SAAiB/B,GACf,IAAMgC,EAAehC,EAAMiC,YAAYC,YAAYC,KAAI,SAAC9B,GAAD,OACrD,cAACN,EAAD,CAAYU,KAAMJ,EAAKI,KAAMP,GAAIG,EAAKH,IAASG,EAAKH,OAGhDkC,EAAcpC,EAAMiC,YAAYI,YAAYF,KAAI,SAACG,GAAD,OACpD,cAAC5B,EAAD,CAAaE,QAAS0B,EAAK1B,SAAc0B,EAAKpC,OAGhD,OACE,sBAAKC,UAAWC,IAAGmC,YAAnB,UACE,qBAAKpC,UAAWC,IAAGoC,MAAnB,SAA2BR,IAC3B,sBAAK7B,UAAWC,IAAGqC,QAAnB,UACE,8BAAML,IACN,8BACE,8BACE,cAAC,EAAD,eAAoBpC,eCdjB0C,sBACbC,aAfsB,SAACC,GACvB,MAAO,CACLX,YAAaW,EAAMX,gBAII,SAACY,GAC1B,MAAO,CACL3B,iBAAkB,SAACC,GACjB0B,EAASC,YAA8B3B,SAO3C4B,IAFaL,CAGbX","file":"static/js/4.fe86c719.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageDialogs\":\"Dialogs_pageDialogs__3HCDB\",\"users\":\"Dialogs_users__1qF6s\",\"user\":\"Dialogs_user__3uEc0\",\"active\":\"Dialogs_active__1rJFF\",\"dialogs\":\"Dialogs_dialogs__15rrm\",\"dialog\":\"Dialogs_dialog__ZQrlN\"};","import React from \"react\";\r\nimport { Field, Form } from \"react-final-form\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport cn from \"./Dialogs.module.css\";\r\n\r\nfunction DialogItem(props) {\r\n  const path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={cn.user}>\r\n      <NavLink to={path} activeClassName={cn.active}>\r\n        {props.name}\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MessageItem(props) {\r\n  return <div className={cn.dialog}>{props.message}</div>;\r\n}\r\n\r\nfunction Dialogs(props) {\r\n  const userNameList = props.dialogsPage.dialogsData.map((user) => (\r\n    <DialogItem name={user.name} id={user.id} key={user.id} />\r\n  ));\r\n\r\n  const messageList = props.dialogsPage.messageData.map((text) => (\r\n    <MessageItem message={text.message} key={text.id} />\r\n  ));\r\n\r\n  return (\r\n    <div className={cn.pageDialogs}>\r\n      <div className={cn.users}>{userNameList}</div>\r\n      <div className={cn.dialogs}>\r\n        <div>{messageList}</div>\r\n        <div>\r\n          <div>\r\n            <AddMessageForm {...props} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n  const addNewDialogMessage = (value) => {\r\n    props.addDialogMessage(value.messageText);\r\n    value.messageText = \"\";\r\n  };\r\n\r\n  const required = (value) => (value ? undefined : \"Required\");\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={addNewDialogMessage}\r\n      render={({ handleSubmit, submitting }) => (\r\n        <form onSubmit={handleSubmit}>\r\n          <Field name=\"messageText\" validate={required}>\r\n            {({ input, meta }) => (\r\n              <div>\r\n                <textarea\r\n                  {...input}\r\n                  type=\"textarea\"\r\n                  placeholder=\"Message text \"\r\n                />\r\n                {meta.error && meta.touched && <span>{meta.error}</span>}\r\n              </div>\r\n            )}\r\n          </Field>\r\n          <div className=\"buttons\">\r\n            <button type=\"submit\" disabled={submitting}>\r\n              Send\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { addDialogMessageActionCreator } from \"../../redux/dialogsReducer\";\r\n\r\nimport Dialogs from \"./Dialogs\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addDialogMessage: (messageText) => {\r\n      dispatch(addDialogMessageActionCreator(messageText));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}